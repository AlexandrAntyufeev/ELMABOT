
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, InputFile
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

BACK = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"

USER_STATE = {}

# –û—Ç–≤–µ—Ç—ã —Å –∫—Ä–∞—Ç–∫–æ–π —Å–ø—Ä–∞–≤–∫–æ–π –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
RESPONSES = {
    "üìÑ –î–æ–≥–æ–≤–æ—Ä: üÜï –°–æ–∑–¥–∞–Ω–∏–µ": {
        "text": "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É +–î–æ–≥–æ–≤–æ—Ä. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (*), –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.",
        "image": "dogovor_create.png"
    },
    "üìë –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è/–ü–°–¶: üÜï –°–æ–∑–¥–∞–Ω–∏–µ": {
        "text": "–ù–∞–∂–º–∏—Ç–µ +–î–æ–ø. —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (*), –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ.",
        "image": "psc_card.png"
    },
    "üìã –°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –¥–æ–≥–æ–≤–æ—Ä–∞: üÜï –°–æ–∑–¥–∞–Ω–∏–µ": {
        "text": "–ù–∞–∂–º–∏—Ç–µ +–°–æ–≥–ª–∞—à–µ–Ω–∏–µ. –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞, —Ç–∏–ø —Å–æ–≥–ª–∞—à–µ–Ω–∏—è, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (*) –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ.",
        "image": "agreement_separate.png"
    },
    "üè¢ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç: üÜï –°–æ–∑–¥–∞–Ω–∏–µ": {
        "text": "–ù–∞–∂–º–∏—Ç–µ +–ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç. –£–∫–∞–∂–∏—Ç–µ –ò–ù–ù –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è (*), —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ.",
        "image": "contractor_create.png"
    }
}

# –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
MAIN_MENU = list(set(k.split(":")[0] for k in RESPONSES.keys()))

# –ù–∞–≤–∏–≥–∞—Ü–∏—è
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    USER_STATE[update.effective_user.id] = "MAIN"
    keyboard = [[KeyboardButton(item)] for item in MAIN_MENU]
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    if text == BACK:
        USER_STATE[user_id] = "MAIN"
        keyboard = [[KeyboardButton(item)] for item in MAIN_MENU]
        await update.message.reply_text("–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
        return

    current_state = USER_STATE.get(user_id, "MAIN")

    # –ü–µ—Ä–≤–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤–≥–ª—É–±—å
    if current_state == "MAIN" and any(k.startswith(text) for k in RESPONSES):
        USER_STATE[user_id] = text
        options = [k.split(":")[1].strip() for k in RESPONSES if k.startswith(text)]
        keyboard = [[KeyboardButton(option)] for option in options] + [[KeyboardButton(BACK)]]
        await update.message.reply_text(f"–†–∞–∑–¥–µ–ª: {text}. –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:", reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True))
        return

    # –û—Ç–≤–µ—Ç –ø–æ —Å–ø—Ä–∞–≤–∫–µ
    full_key = f"{current_state}: {text}"
    if full_key in RESPONSES:
        resp = RESPONSES[full_key]
        await update.message.reply_text(resp["text"])
        try:
            with open(f"images/{resp['image']}", "rb") as img:
                await update.message.reply_photo(photo=InputFile(img))
        except Exception:
            await update.message.reply_text("‚ö†Ô∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–∫–∞ –Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞.")
        return

    await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞.")

if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    app.run_polling()
